[build-system]
requires = ["setuptools", "wheel", "cmake"]
build-backend = "setuptools.build_meta:__legacy__"

[project]
name = "pybamm"
description = "Python Battery Mathematical Modelling."
readme = { file = "README.md", content-type = "text/markdown" }
keywords = [
  "pybamm",
]
requires-python = '>=3.8,<3.12'
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
]
dynamic = [
  "version",
]
dependencies = [
    "numpy>=1.16",
    "scipy>=1.3",
    "pandas>=0.24",
    "casadi>=3.6.0",
    "xarray"
]

[project.entry-points."console_scripts"]
pybamm_edit_parameter = "pybamm.parameters_cli:edit_parameter"
pybamm_add_parameter = "pybamm.parameters_cli:add_parameter"
pybamm_rm_parameter = "pybamm.parameters_cli:remove_parameter"
pybamm_install_odes = "pybamm.install_odes:main"
pybamm_install_jax = "pybamm.util:install_jax"

[project.entry-points."pybamm_parameter_sets"]
Sulzer2019 = "pybamm.input.parameters.lead_acid.Sulzer2019:get_parameter_values"
Ai2020 = "pybamm.input.parameters.lithium_ion.Ai2020:get_parameter_values"
Chen2020 = "pybamm.input.parameters.lithium_ion.Chen2020:get_parameter_values"
Chen2020_composite = "pybamm.input.parameters.lithium_ion.Chen2020_composite:get_parameter_values"
Ecker2015 = "pybamm.input.parameters.lithium_ion.Ecker2015:get_parameter_values"
Marquis2019 = "pybamm.input.parameters.lithium_ion.Marquis2019:get_parameter_values"
Mohtat2020 = "pybamm.input.parameters.lithium_ion.Mohtat2020:get_parameter_values"
NCA_Kim2011 = "pybamm.input.parameters.lithium_ion.NCA_Kim2011:get_parameter_values"
OKane2022 = "pybamm.input.parameters.lithium_ion.OKane2022:get_parameter_values"
ORegan2022 = "pybamm.input.parameters.lithium_ion.ORegan2022:get_parameter_values"
Prada2013 = "pybamm.input.parameters.lithium_ion.Prada2013:get_parameter_values"
Ramadass2004 = "pybamm.input.parameters.lithium_ion.Ramadass2004:get_parameter_values"
Xu2019 = "pybamm.input.parameters.lithium_ion.Xu2019:get_parameter_values"
ECM_Example = "pybamm.input.parameters.ecm.example_set:get_parameter_values"

[project.optional-dependencies]
docs = [
    "sphinx>=1.5",
    "pydata-sphinx-theme",
    "sphinx_design",
    "sphinx-copybutton",
    "myst-parser",
    "sphinx-inline-tabs",
]
examples = [
    "pre-commit",
    "black",
    "jupyter",
]
plot = [
    "imageio>=2.9.0",
    "matplotlib>=2.0",
]
cite = [
    "pybtex>=0.24.0",
]
latexify = [
    "sympy>=1.8",
]
bpx = [
    "bpx",
]
tqdm = [
    "tqdm",
]
dev = [
    "numpy>=1.16",
    "scipy>=1.3",
    "pandas>=0.24",
    "anytree>=2.4.3",
    "autograd>=1.2",
    "scikit-fem>=0.2.0",
    "casadi>=3.6.0",
    "imageio>=2.9.0",
    "pybtex>=0.24.0",
    "sympy>=1.8",
    "xarray",
    "bpx",
    "tqdm",
    "matplotlib>=2.0",
]
all = [
    "numpy>=1.16",
    "scipy>=1.3",
    "pandas>=0.24",
    "anytree>=2.4.3",
    "autograd>=1.2",
    "scikit-fem>=0.2.0",
    "casadi>=3.6.0",
    "imageio>=2.9.0",
    "pybtex>=0.24.0",
    "sympy>=1.8",
    "xarray",
    "bpx",
    "tqdm",
    "matplotlib>=2.0",
    "sphinx>=1.5",
    "pydata-sphinx-theme",
    "sphinx_design",
    "sphinx-copybutton",
    "myst-parser",
    "sphinx-inline-tabs",
    "pre-commit",
    "black",
    "jupyter",
]